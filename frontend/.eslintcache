[{"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/FoodOrderDialog.jsx":"1","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/Buttons/OrderButton.jsx":"2","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/Buttons/CountDownButton.jsx":"3","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/Buttons/CountUpButton.jsx":"4","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/containers/Foods.jsx":"5","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/shared_style.js":"6","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/FoodWrapper.jsx":"7","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/StyledText.jsx":"8"},{"size":2632,"mtime":1614598931000,"results":"9","hashOfConfig":"10"},{"size":496,"mtime":1614596246000,"results":"11","hashOfConfig":"10"},{"size":235,"mtime":1614596405000,"results":"12","hashOfConfig":"10"},{"size":233,"mtime":1614595922000,"results":"13","hashOfConfig":"10"},{"size":4011,"mtime":1614598252000,"results":"14","hashOfConfig":"10"},{"size":510,"mtime":1614598747000,"results":"15","hashOfConfig":"10"},{"size":1053,"mtime":1613469521000,"results":"16","hashOfConfig":"10"},{"size":195,"mtime":1613468400000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jx8y7d",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/FoodOrderDialog.jsx",[],"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/Buttons/OrderButton.jsx",[],["36","37"],"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/Buttons/CountDownButton.jsx",[],"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/Buttons/CountUpButton.jsx",[],"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/containers/Foods.jsx",["38"],"import React, { Fragment, useEffect, useReducer, useState } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n// components\nimport { LocalMallIcon } from '../components/Icons';\nimport { FoodWrapper } from '../components/FoodWrapper';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {FoodOrderDialog } from '../components/FoodOrderDialog';\n\n// reducer\nimport {\n  initialState as foodsInitialState,\n  foodsActionTyps,\n  foodsReducer,\n} from '../reducers/foods';\n\n// apis\nimport { fetchFoods } from '../apis/foods';\n\n// images\nimport MainLogo from '../images/logo.png';\nimport FoodImage from '../images/food-image.jpg';\n\n// constants\nimport { COLORS } from '../style_constants';\nimport { REQUEST_STATE } from '../constants';\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px 32px;\n`;\n\nconst BagIconWrapper = styled.div`\n  padding-top: 24px;\n`;\n\nconst ColoredBagIcon = styled(LocalMallIcon)`\n  color: ${COLORS.MAIN};\n`;\n\nconst MainLogoImage = styled.img`\n  height: 90px;\n`;\n\nconst FoodsList = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  margin-bottom: 50px;\n`;\n\nconst ItemWrapper = styled.div`\n  margin: 16px;\n`;\n\nconst submitOrder = () => {\n  // 後ほど仮注文のAPIを実装します\n  console.log('登録ボタンが押された！');\n}\n\nexport const Foods = ({\n  match\n}) => {\n\n  const [foodsState, dispatch] = useReducer(foodsReducer, foodsInitialState);\n\n  const initialState = {\n    isOpenOrderDialog: false,\n    selectedFood: null,\n    selectedFoodCount: 1,\n  }\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => {\n    dispatch({ type: foodsActionTyps.FETCHING });\n    fetchFoods(match.params.restaurantsId)\n    .then((data) => {\n      dispatch({\n        type: foodsActionTyps.FETCH_SUCCESS,\n        payload: {\n          foods: data.foods\n        }\n      });\n    })\n  }, [])\n\n  return (\n    <Fragment>\n      <HeaderWrapper>\n        <Link to='/restaurants'>\n          <MainLogoImage src={MainLogo} alt=\"main logo\" />\n        </Link>\n        <BagIconWrapper>\n          <Link to='/orders'>\n            <ColoredBagIcon fontSize=\"large\" />\n          </Link>\n        </BagIconWrapper>\n      </HeaderWrapper>\n      <FoodsList>\n        {\n          foodsState.fetchState === REQUEST_STATE.LOADING ? \n            <Fragment>\n              {\n                [...Array(12).keys()].map(i => \n                  <ItemWrapper key={i}>\n                    <Skeleton key={i} variant=\"rect\" width={450} height={180} />\n                  </ItemWrapper>\n                )\n              }\n            </Fragment>\n          :\n            foodsState.foodsList.map(food => \n              <ItemWrapper key={food.id} >\n                <FoodWrapper\n                  food={food}\n                  onClickFoodWrapper={(food) => setState({\n                    ...state,\n                    isOpenOrderDialog: true,\n                    selectedFood: food,\n                  })}\n                  imageUrl={FoodImage}\n                />\n              </ItemWrapper>\n            )\n        }\n      </FoodsList>\n      {\n        state.isOpenOrderDialog &&\n          <FoodOrderDialog \n            isOpen={state.isOpenOrderDialog}\n            food={state.selectedFood}\n            countNumber={state.selectedFoodCount}\n            onClickCountUp={() => setState({\n              ...state,\n              selectedFoodCount: state.selectedFoodCount + 1,\n            })}\n            onClickCountDown={() => setState({\n              ...state,\n              selectedFoodCount: state.selectedFoodCount - 1,\n            })}\n            onClickOrder={() => submitOrder()}\n            // モーダルを閉じるときはすべてのstateを初期化する\n            onClose={() => setState({\n              ...state,\n              isOpenOrderDialog: false,\n              selectedFood: null,\n              selectedFoodCount: 1,\n            })}\n          />\n      }\n    </Fragment>\n  )\n}\n","/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/shared_style.js",[],"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/FoodWrapper.jsx",[],"/Volumes/Extreme SSD/Techpit/uber-eats-like/frontend/src/components/StyledText.jsx",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":87,"column":6,"nodeType":"45","endLine":87,"endColumn":8,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.restaurantsId'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [match.params.restaurantsId]",{"range":"52","text":"53"},[1896,1898],"[match.params.restaurantsId]"]